---
- set_fact: NGINX_ENABLE_SSL=true

- name: Create {{ dhparamfile_dir }} directory
  file: 
    path: "{{ dhparamfile_dir }}"
    state: directory
  become_method: sudo
  become_user: root
  become: True

- name: Check if {{ dhparamfile_dir }} dir exist
  stat:
    path: "{{ dhparamfile_dir }}"
  register: check_dhparamfile_dir_exist
  become_method: sudo
  become_user: root
  become: True

- name: Generate dhparam.pem
  command: openssl dhparam -out "{{ dhparamfile_dir }}"/dhparam.pem 2048
  when: check_dhparamfile_dir_exist.stat.exists
  become_method: sudo
  become_user: root
  become: True

- stat: path="/etc/letsencrypt/live/{{ INSIGHTS_BASE }}/fullchain.pem" 
  register: le_cert_exists
  become_method: sudo
  become: yes
  become_user: root

- name: Installing certbot dependencies
  apt: name="{{ item }}" update_cache=yes
  with_items: "{{ le_packages }}"
  become_method: sudo
  become: yes
  become_user: root

- name: Creating checkout directory for nginx
  file: path=/var/www/letsencrypt state=directory mode=0755 owner=www-data group=www-data
  become_method: sudo
  become: yes
  become_user: root
  notify: reload nginx

- name: Installing certbot
  get_url:
    url: https://dl.eff.org/certbot-auto
    dest: /usr/local/bin/certbot-auto
    mode: 0755
  become_method: sudo
  become: yes
  become_user: root

- name: Performing post-installation setup
  command: /usr/local/bin/certbot-auto --non-interactive --text --os-packages-only
  become_method: sudo
  become: yes
  become_user: root
  when: le_cert_exists.stat.islnk is not defined

- name: Updating nginx lestencrypt configuration file
  template:
    src: "{{ item }}.j2"
    dest: "{{ nginx_sites_available_dir }}/{{ item }}"
    force: yes
  with_items:
    - "lestencrypt"
  become_method: sudo
  become: yes
  become_user: root

- name: Creating link for lestencrypt nginx configuration
  file:
    src: "{{ nginx_sites_available_dir }}/{{ item }}"
    dest: "{{ nginx_sites_enabled_dir }}/{{ item }}"
    state: link
    owner: root
    group: root
  with_items:
    - "lestencrypt"
  notify: reload nginx
  tags:
    - install
    - install:configuration

- name: Compare LETSENCRYPT_MAIN_DOMAIN with INSIGHTS_BASE and ANALYTICS_API_BASE
  set_fact:
    LETSENCRYPT_MAIN_DOMAIN: "{{ LETSENCRYPT_MAIN_DOMAIN|default([]) + [INSIGHTS_BASE] + [ANALYTICS_API_BASE] }}"

- name: Compare LETSENCRYPT_MAIN_DOMAIN with LETSENCRYPT_ADDITIONAL_DOMAIN
  set_fact:
    LETSENCRYPT_ALL_DOMAIN: "{{ LETSENCRYPT_MAIN_DOMAIN + LETSENCRYPT_ADDITIONAL_DOMAIN }}"

- name: Requesting for INSIGHTS_BASE, ANALYTICS_API_BASE and LETSENCRYPT_ADDITIONAL_DOMAIN certificates
  command: /usr/local/bin/certbot-auto certonly --agree-tos --non-interactive --text --rsa-key-size 2048 --webroot -w /var/www/letsencrypt -d {{ LETSENCRYPT_ALL_DOMAIN|join(' -d ') }}  --register-unsafely-without-email --force-renewal
  become_method: sudo
  become: yes
  become_user: root
  when: le_cert_exists.stat.islnk is not defined

- name: Updating nginx configuration files
  template:
    src: "{{ item }}.j2"
    dest: "{{ nginx_sites_available_dir }}/{{ item }}"
    force: yes
  with_items: "{{ nginx_sites }}"
  notify: restart nginx
  become_method: sudo
  become: yes
  become_user: root

- name: Creating link for {{ nginx_sites }} nginx configuration
  file:
    src: "{{ nginx_sites_available_dir }}/{{ item }}"
    dest: "{{ nginx_sites_enabled_dir }}/{{ item }}"
    state: link
    owner: root
    group: root
  with_items: "{{ nginx_sites }}"
  notify: restart nginx
  tags:
    - install
    - install:configuration

- name: Restarting nginx
  service: name=nginx state=restarted
  become_method: sudo
  become: yes
  become_user: root

- name: Add auto-renewal task in cron
  cron: 
    name: "Automatic renewal letsencrypt certificate" 
    minute: "0" 
    hour: "1"
    month: "*/2"
    job: '/usr/local/bin/certbot-auto renew --force-renewal --post-hook "service nginx restart" > /dev/null'
  become_method: sudo
  become: yes
  become_user: root

- name: Make sure nginx has started
  service:
    name: nginx
    state: started
  tags:
    - manage
    - manage:start
